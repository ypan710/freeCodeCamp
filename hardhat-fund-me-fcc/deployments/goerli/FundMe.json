{
  "address": "0x0531A216C6d26139BD25ac71A13Af3485751e50E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb59666528083a82fcdf01a982e514bea8181dbfe6d7c0f7cddf714edc3a6e51d",
  "receipt": {
    "to": null,
    "from": "0xd583A1Db810f0Ec4CC1ceac472235E8A70FCe2dc",
    "contractAddress": "0x0531A216C6d26139BD25ac71A13Af3485751e50E",
    "transactionIndex": 72,
    "gasUsed": "1001667",
    "logsBloom": "0x
    "blockHash": "0x2be0c1e87887de910b7489303a2ba8a485b4c57ab0adb3a02fe19514dd254f0b",
    "transactionHash": "0xb59666528083a82fcdf01a982e514bea8181dbfe6d7c0f7cddf714edc3a6e51d",
    "logs": [],
    "blockNumber": 7861512,
    "cumulativeGasUsed": "12790447",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 3,
  "solcInputHash": "2bfd4fe41cbdd4026909d6a33fc76ae3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Yongjian\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// error\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowdfunding\\n *  @author Yongjian\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0xcbb6d817387fd5b174c382e8c8b641d5e96c835fecee7b67f4a75c7080ef81ab\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        priceFeed = AggregatorV3Interface(priceFeed);\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x801fa6b2cf2173a288a69b6585c5b5d2cc68f68cba019b8070df1e29d29e20ba\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011c1380380620011c183398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611055806200016c6000396000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102f8565b6040516100ba9190610a83565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ae1565b61031e565b6040516100f79190610b27565b60405180910390f35b34801561010c57600080fd5b50610115610336565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b6e565b610578565b60405161014b9190610baa565b60405180910390f35b34801561016057600080fd5b506101696105b7565b6040516101769190610b27565b60405180910390f35b6101876101be565b005b6101916105c4565b005b34801561019f57600080fd5b506101a861086a565b6040516101b59190610baa565b60405180910390f35b6802b5e3af16b18800006101fd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089090919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c22565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610c71565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103bd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610468576000600182815481106103e3576103e2610ca5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046090610cd4565b9150506103c0565b50600067ffffffffffffffff81111561048457610483610d1c565b5b6040519080825280602002602001820160405280156104b25781602001602082028036833780820191505090505b50600190805190602001906104c892919061095d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ef90610d7c565b60006040518083038185875af1925050503d806000811461052c576040519150601f19603f3d011682016040523d82523d6000602084013e610531565b606091505b5050905080610575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056c90610ddd565b60405180910390fd5b50565b6001818154811061058857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106cf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610685575b5050505050905060005b81518110156107595760008282815181106106f7576106f6610ca5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075190610cd4565b9150506106d9565b50600067ffffffffffffffff81111561077557610774610d1c565b5b6040519080825280602002602001820160405280156107a35781602001602082028036833780820191505090505b50600190805190602001906107b992919061095d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107e090610d7c565b60006040518083038185875af1925050503d806000811461081d576040519150601f19603f3d011682016040523d82523d6000602084013e610822565b606091505b5050905080610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d90610ddd565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061089c836108cc565b90506000670de0b6b3a764000085836108b59190610dfd565b6108bf9190610e6e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190610f2c565b5050509150506402540be400816109559190610fa7565b915050919050565b8280548282559060005260206000209081019282156109d6579160200282015b828111156109d55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061097d565b5b5090506109e391906109e7565b5090565b5b80821115610a005760008160009055506001016109e8565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a49610a44610a3f84610a04565b610a24565b610a04565b9050919050565b6000610a5b82610a2e565b9050919050565b6000610a6d82610a50565b9050919050565b610a7d81610a62565b82525050565b6000602082019050610a986000830184610a74565b92915050565b600080fd5b6000610aae82610a04565b9050919050565b610abe81610aa3565b8114610ac957600080fd5b50565b600081359050610adb81610ab5565b92915050565b600060208284031215610af757610af6610a9e565b5b6000610b0584828501610acc565b91505092915050565b6000819050919050565b610b2181610b0e565b82525050565b6000602082019050610b3c6000830184610b18565b92915050565b610b4b81610b0e565b8114610b5657600080fd5b50565b600081359050610b6881610b42565b92915050565b600060208284031215610b8457610b83610a9e565b5b6000610b9284828501610b59565b91505092915050565b610ba481610aa3565b82525050565b6000602082019050610bbf6000830184610b9b565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c0c601b83610bc5565b9150610c1782610bd6565b602082019050919050565b60006020820190508181036000830152610c3b81610bff565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7c82610b0e565b9150610c8783610b0e565b9250828201905080821115610c9f57610c9e610c42565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610cdf82610b0e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d1157610d10610c42565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d66600083610d4b565b9150610d7182610d56565b600082019050919050565b6000610d8782610d59565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc7600b83610bc5565b9150610dd282610d91565b602082019050919050565b60006020820190508181036000830152610df681610dba565b9050919050565b6000610e0882610b0e565b9150610e1383610b0e565b9250828202610e2181610b0e565b91508282048414831517610e3857610e37610c42565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7982610b0e565b9150610e8483610b0e565b925082610e9457610e93610e3f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ebe81610e9f565b8114610ec957600080fd5b50565b600081519050610edb81610eb5565b92915050565b6000819050919050565b610ef481610ee1565b8114610eff57600080fd5b50565b600081519050610f1181610eeb565b92915050565b600081519050610f2681610b42565b92915050565b600080600080600060a08688031215610f4857610f47610a9e565b5b6000610f5688828901610ecc565b9550506020610f6788828901610f02565b9450506040610f7888828901610f17565b9350506060610f8988828901610f17565b9250506080610f9a88828901610ecc565b9150509295509295909350565b6000610fb282610ee1565b9150610fbd83610ee1565b9250828202610fcb81610ee1565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561100357611002610c42565b5b828205841483151761101857611017610c42565b5b509291505056fea264697066735822122036d1205c3e2410142d6c619b05c606f378b23fd0af26162dd4d42540853ea9c664736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102f8565b6040516100ba9190610a83565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ae1565b61031e565b6040516100f79190610b27565b60405180910390f35b34801561010c57600080fd5b50610115610336565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b6e565b610578565b60405161014b9190610baa565b60405180910390f35b34801561016057600080fd5b506101696105b7565b6040516101769190610b27565b60405180910390f35b6101876101be565b005b6101916105c4565b005b34801561019f57600080fd5b506101a861086a565b6040516101b59190610baa565b60405180910390f35b6802b5e3af16b18800006101fd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089090919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c22565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610c71565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103bd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610468576000600182815481106103e3576103e2610ca5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046090610cd4565b9150506103c0565b50600067ffffffffffffffff81111561048457610483610d1c565b5b6040519080825280602002602001820160405280156104b25781602001602082028036833780820191505090505b50600190805190602001906104c892919061095d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ef90610d7c565b60006040518083038185875af1925050503d806000811461052c576040519150601f19603f3d011682016040523d82523d6000602084013e610531565b606091505b5050905080610575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056c90610ddd565b60405180910390fd5b50565b6001818154811061058857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106cf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610685575b5050505050905060005b81518110156107595760008282815181106106f7576106f6610ca5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075190610cd4565b9150506106d9565b50600067ffffffffffffffff81111561077557610774610d1c565b5b6040519080825280602002602001820160405280156107a35781602001602082028036833780820191505090505b50600190805190602001906107b992919061095d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107e090610d7c565b60006040518083038185875af1925050503d806000811461081d576040519150601f19603f3d011682016040523d82523d6000602084013e610822565b606091505b5050905080610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d90610ddd565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061089c836108cc565b90506000670de0b6b3a764000085836108b59190610dfd565b6108bf9190610e6e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190610f2c565b5050509150506402540be400816109559190610fa7565b915050919050565b8280548282559060005260206000209081019282156109d6579160200282015b828111156109d55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061097d565b5b5090506109e391906109e7565b5090565b5b80821115610a005760008160009055506001016109e8565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a49610a44610a3f84610a04565b610a24565b610a04565b9050919050565b6000610a5b82610a2e565b9050919050565b6000610a6d82610a50565b9050919050565b610a7d81610a62565b82525050565b6000602082019050610a986000830184610a74565b92915050565b600080fd5b6000610aae82610a04565b9050919050565b610abe81610aa3565b8114610ac957600080fd5b50565b600081359050610adb81610ab5565b92915050565b600060208284031215610af757610af6610a9e565b5b6000610b0584828501610acc565b91505092915050565b6000819050919050565b610b2181610b0e565b82525050565b6000602082019050610b3c6000830184610b18565b92915050565b610b4b81610b0e565b8114610b5657600080fd5b50565b600081359050610b6881610b42565b92915050565b600060208284031215610b8457610b83610a9e565b5b6000610b9284828501610b59565b91505092915050565b610ba481610aa3565b82525050565b6000602082019050610bbf6000830184610b9b565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c0c601b83610bc5565b9150610c1782610bd6565b602082019050919050565b60006020820190508181036000830152610c3b81610bff565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7c82610b0e565b9150610c8783610b0e565b9250828201905080821115610c9f57610c9e610c42565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610cdf82610b0e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d1157610d10610c42565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d66600083610d4b565b9150610d7182610d56565b600082019050919050565b6000610d8782610d59565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc7600b83610bc5565b9150610dd282610d91565b602082019050919050565b60006020820190508181036000830152610df681610dba565b9050919050565b6000610e0882610b0e565b9150610e1383610b0e565b9250828202610e2181610b0e565b91508282048414831517610e3857610e37610c42565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7982610b0e565b9150610e8483610b0e565b925082610e9457610e93610e3f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ebe81610e9f565b8114610ec957600080fd5b50565b600081519050610edb81610eb5565b92915050565b6000819050919050565b610ef481610ee1565b8114610eff57600080fd5b50565b600081519050610f1181610eeb565b92915050565b600081519050610f2681610b42565b92915050565b600080600080600060a08688031215610f4857610f47610a9e565b5b6000610f5688828901610ecc565b9550506020610f6788828901610f02565b9450506040610f7888828901610f17565b9350506060610f8988828901610f17565b9250506080610f9a88828901610ecc565b9150509295509295909350565b6000610fb282610ee1565b9150610fbd83610ee1565b9250828202610fcb81610ee1565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561100357611002610c42565b5b828205841483151761101857611017610c42565b5b509291505056fea264697066735822122036d1205c3e2410142d6c619b05c606f378b23fd0af26162dd4d42540853ea9c664736f6c63430008110033",
  "devdoc": {
    "author": "Yongjian",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}